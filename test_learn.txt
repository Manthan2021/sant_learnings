how to throw exception manually for testing catch block
doThrow(Exception.class).when(service).processKafkaMessage(any(),any());


how to do nothing
doNothing().when(service).method(any(),any());


how to set global values-
1)ReflectionTestUtils.setField("Service","fieldName","value");

//use of verify
service.process(arg1,arg2);
verify(service).process(arg1,arg2);

//use of when/then
when(service.method(arg1,arg2)).thenReturn(xyz);

How to test model class-->
ModelTest(){
class obj=new class();
obj.setA("A");
obj.setB("B");

assertEquals(model.setA(),"A");
assertEquals(model.setB(),"B");

}


hashCodeTest(){
assertNotSame(obj1.hashcode(),obj2.hashCode());
}

equalsTest(){
class obj1=null;
class obj2=model1

assertFalse(obj1.equals(obj2));
assertTrue(model1.equals(obj2));
}

NotEqualsTest(){
class obj1=new class("1","1","1","1");
class obj2=new class("1","2","1","1");
class obj3=new class("1","1","3","1");
class obj4=new class("1","1","1","4");

assertFalse(obj1.equals(obj2));
assertFalse(obj1.equals(obj3));
assertFalse(obj1.equals(obj4));


}

toStringTest(){
assertNotNull(model1.toString());
}



we can also assert like-->
assertTrue("list of failure records",!failedRecords.isEmpty());


//Testing private methods-->
public void stopserviceTest(){
Listener myclass=new Listenser();
Method method=Listener.class.getDeclaredMethod("stopService",long.class,long.class,string.class);

assertThrows(Exception.class,()->{
verify((TopicPartionMetaData) method.invoke(myClass,0,0,null));
  });
}










