how to throw exception manually for testing catch block
doThrow(Exception.class).when(service).processKafkaMessage(any(),any());
when(Repo.findByXYZ(any(),any())).thenThrow(new JDBCException(null,null));


how to do nothing
doNothing().when(service).method(any(),any());


how to set global values-
1)ReflectionTestUtils.setField("Service","fieldName","value");

//use of verify
service.process(arg1,arg2);
verify(service).process(arg1,arg2);

//use of when/then
when(service.method(arg1,arg2)).thenReturn(xyz);

How to test model class-->
ModelTest(){
class obj=new class();
obj.setA("A");
obj.setB("B");

assertEquals(model.setA(),"A");
assertEquals(model.setB(),"B");

}


hashCodeTest(){
assertNotSame(obj1.hashcode(),obj2.hashCode());
}

equalsTest(){
class obj1=null;
class obj2=model1

assertFalse(obj1.equals(obj2));
assertTrue(model1.equals(obj2));
}

NotEqualsTest(){
class obj1=new class("1","1","1","1");
class obj2=new class("1","2","1","1");
class obj3=new class("1","1","3","1");
class obj4=new class("1","1","1","4");

assertFalse(obj1.equals(obj2));
assertFalse(obj1.equals(obj3));
assertFalse(obj1.equals(obj4));


}

toStringTest(){
assertNotNull(model1.toString());
}



we can also assert like-->
assertTrue("list of failure records",!failedRecords.isEmpty());


//Testing private methods-->
public void stopserviceTest(){
Listener myclass=new Listenser();
Method method=Listener.class.getDeclaredMethod("stopService",long.class,long.class,string.class);

assertThrows(Exception.class,()->{
verify((TopicPartionMetaData) method.invoke(myClass,0,0,null));
  });
}

Testing Exceptions using static methods-
must have mockito in line
public MockedStatic<KafkaStreamUtil> myutil;
 
void ExceptionTest(){
myutil=mockStatic(KafkaStreamUtils.class,"getStringValue")
GenericRecord value=mock(GenericRecord.class);
GenericRecord key=mock(GenericRecord.class);
//ConsumerRecord....=new ConsumerRecord("",10,100,key,value)
when(KafkaStreamUtils.getStringValue(any(),any()).thenThrow(ClassCastException.class);
ckTransactionCodeCharge=kafkaRecordToTransactionCodeCharge.convert(record);
assertNull(ckTransactionCodeCharge);
myutil.close();


}

//How to set private global values in a junit test case
ReflectionTestUtils.setField(consumerService,"startDateEnable",value);

How to create consumer Record/Generic Record

Void SetUp(){
String Value_Schema="{/type/:/record....\fields\" ...{name:\"field name" data_typwe.........}";
Schema.Parser parser=new Schema Parser();
genericRecord=new GenericData.Record(valueSchema);
genericRecord.put("sv1Gfx","000");
genericRecord.put("sv1Gfy","000");
genericRecord.put("sv1Gfz","000");

consumerRecord=new ConsumerRecord("topic",10,999,genericRecord,genericRecord);

}

//how to throw JDBC Exceptions
when(offsetRepositorty.findByEnvironmentAndConsumerGroupAndTopicAndPartitionId(any(),any(),any(),any())).thenThrow(new JDBCException(null,null));
























